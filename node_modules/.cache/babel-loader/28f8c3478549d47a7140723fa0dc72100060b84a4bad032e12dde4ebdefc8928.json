{"ast":null,"code":"import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useRef, useCallback } from 'react';\nfunction useFocusGesture(_ref) {\n  let {\n    whileFocus,\n    visualElement\n  } = _ref;\n  const isFocusActive = useRef(false);\n  const {\n    animationState\n  } = visualElement;\n  const onFocus = useCallback(() => {\n    let isFocusVisible = false;\n    /**\r\n     * If this element doesn't match focus-visible then don't\r\n     * apply whileHover. But, if matches throws that focus-visible\r\n     * is not a valid selector then in that browser outline styles will be applied\r\n     * to the element by default and we want to match that behaviour with whileFocus.\r\n     */\n    try {\n      isFocusVisible = visualElement.current.matches(\":focus-visible\");\n    } catch (e) {\n      isFocusVisible = true;\n    }\n    if (!isFocusVisible || !animationState) return;\n    animationState.setActive(AnimationType.Focus, true);\n    isFocusActive.current = true;\n  }, [animationState]);\n  const onBlur = useCallback(() => {\n    if (!isFocusActive.current || !animationState) return;\n    animationState.setActive(AnimationType.Focus, false);\n    isFocusActive.current = false;\n  }, [animationState]);\n  useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n  useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\nexport { useFocusGesture };","map":{"version":3,"names":["AnimationType","useDomEvent","useRef","useCallback","useFocusGesture","whileFocus","visualElement","isFocusActive","animationState","onFocus","isFocusVisible","current","matches","e","setActive","Focus","onBlur","undefined"],"sources":["Y:/courseira/NewLemon/new-lemon/node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs"],"sourcesContent":["import { AnimationType } from '../render/utils/types.mjs';\r\nimport { useDomEvent } from '../events/use-dom-event.mjs';\r\nimport { useRef, useCallback } from 'react';\r\n\r\nfunction useFocusGesture({ whileFocus, visualElement, }) {\r\n    const isFocusActive = useRef(false);\r\n    const { animationState } = visualElement;\r\n    const onFocus = useCallback(() => {\r\n        let isFocusVisible = false;\r\n        /**\r\n         * If this element doesn't match focus-visible then don't\r\n         * apply whileHover. But, if matches throws that focus-visible\r\n         * is not a valid selector then in that browser outline styles will be applied\r\n         * to the element by default and we want to match that behaviour with whileFocus.\r\n         */\r\n        try {\r\n            isFocusVisible = visualElement.current.matches(\":focus-visible\");\r\n        }\r\n        catch (e) {\r\n            isFocusVisible = true;\r\n        }\r\n        if (!isFocusVisible || !animationState)\r\n            return;\r\n        animationState.setActive(AnimationType.Focus, true);\r\n        isFocusActive.current = true;\r\n    }, [animationState]);\r\n    const onBlur = useCallback(() => {\r\n        if (!isFocusActive.current || !animationState)\r\n            return;\r\n        animationState.setActive(AnimationType.Focus, false);\r\n        isFocusActive.current = false;\r\n    }, [animationState]);\r\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\r\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\r\n}\r\n\r\nexport { useFocusGesture };\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAE3C,SAASC,eAAe,OAAiC;EAAA,IAAhC;IAAEC,UAAU;IAAEC;EAAe,CAAC;EACnD,MAAMC,aAAa,GAAGL,MAAM,CAAC,KAAK,CAAC;EACnC,MAAM;IAAEM;EAAe,CAAC,GAAGF,aAAa;EACxC,MAAMG,OAAO,GAAGN,WAAW,CAAC,MAAM;IAC9B,IAAIO,cAAc,GAAG,KAAK;IAC1B;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI;MACAA,cAAc,GAAGJ,aAAa,CAACK,OAAO,CAACC,OAAO,CAAC,gBAAgB,CAAC;IACpE,CAAC,CACD,OAAOC,CAAC,EAAE;MACNH,cAAc,GAAG,IAAI;IACzB;IACA,IAAI,CAACA,cAAc,IAAI,CAACF,cAAc,EAClC;IACJA,cAAc,CAACM,SAAS,CAACd,aAAa,CAACe,KAAK,EAAE,IAAI,CAAC;IACnDR,aAAa,CAACI,OAAO,GAAG,IAAI;EAChC,CAAC,EAAE,CAACH,cAAc,CAAC,CAAC;EACpB,MAAMQ,MAAM,GAAGb,WAAW,CAAC,MAAM;IAC7B,IAAI,CAACI,aAAa,CAACI,OAAO,IAAI,CAACH,cAAc,EACzC;IACJA,cAAc,CAACM,SAAS,CAACd,aAAa,CAACe,KAAK,EAAE,KAAK,CAAC;IACpDR,aAAa,CAACI,OAAO,GAAG,KAAK;EACjC,CAAC,EAAE,CAACH,cAAc,CAAC,CAAC;EACpBP,WAAW,CAACK,aAAa,EAAE,OAAO,EAAED,UAAU,GAAGI,OAAO,GAAGQ,SAAS,CAAC;EACrEhB,WAAW,CAACK,aAAa,EAAE,MAAM,EAAED,UAAU,GAAGW,MAAM,GAAGC,SAAS,CAAC;AACvE;AAEA,SAASb,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}